apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (HEAD)
  labels:
    service: postgres-primary
  name: postgres-primary
spec:
  replicas: 1
  serviceName: postgres
  selector:
    matchLabels:
      service: postgres-primary
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (HEAD)
      labels:
        service: postgres-primary
    spec:
      initContainers:
        - name: init
          image: postgres:16.3
          command: ["bash", "-c"]
          args:
            - |
              mkdir -p /data/archive && \
              chown -R 999:999 /data/archive
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          volumeMounts:
            - mountPath: /data
              name: postgres-data
              subPath: pgdata
              readOnly: false
      containers:
        - args:
            - -c
            - config_file=/config/postgresql.conf
          env:
            - name: PGDATA
              value: /data/pgdata
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: database
                  key: database-name
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: database
                  key: database-username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database
                  key: database-password
          image: postgres:16.3
          name: postgres-primary
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d
              name: init-db-config
            - mountPath: /config
              name: postgres-1-config
            - mountPath: /data
              name: postgres-data
              subPath: pgdata
              readOnly: false
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: service
                    operator: In
                    values:
                      - postgres-replica
                      - products
              topologyKey: "kubernetes.io/hostname"
      restartPolicy: Always
      volumes:
        - configMap:
            name: postgres-1-config
          name: postgres-1-config
        - configMap:
            name: init-db-config
          name: init-db-config
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc
