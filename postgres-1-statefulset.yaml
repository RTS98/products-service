apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: postgres
  name: postgres
spec:
  replicas: 1
  serviceName: postgres
  selector:
    matchLabels:
      io.kompose.service: postgres
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: postgres
    spec:
      initContainers:
        - name: init
          image: postgres:16.3
          command: ["bash", "-c"]
          args:
            - |
              mkdir -p /data/archive && \
              chown -R 999:999 /data/archive
          securityContext:
            runAsUser: 999
            runAsGroup: 999
            fsGroup: 999
          volumeMounts:
            - mountPath: /data
              name: postgres-data
              readOnly: false
      containers:
        - args:
            - -c
            - config_file=/config/postgresql.conf
          env:
            - name: PGDATA
              value: /data/pgdata
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: database
                  key: database-name
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: database
                  key: database-username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database
                  key: database-password
          image: postgres:16.3
          name: postgres-1
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/init-db.sql
              name: postgres-1-config
              subPath: init-db.sql
            - mountPath: /config/postgresql.conf
              name: postgres-1-config
              subPath: postgresql.conf
            - mountPath: /config/pg_hba.conf
              name: postgres-1-config
              subPath: pg_hba.conf
            - mountPath: /config/pg_ident.conf
              name: postgres-1-config
              subPath: pg_ident.conf
            - mountPath: /data/pgdata
              name: postgres-data
              readOnly: false
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: io.kompose.service
                    operator: In
                    values:
                      - postgres-1
              topologyKey: "kubernetes.io/hostname"
      restartPolicy: Always
      volumes:
        - configMap:
            # items:
            #   - key: init-db.sql
            #     path: init-db.sql
            #   # - key: init-archive.sh
            #   #   path: init-archive.sh
            #   - key: pg_hba.conf
            #     path: pg_hba.conf
            #   - key: pg_ident.conf
            #     path: pg_ident.conf
            #   - key: postgresql.conf
            #     path: postgresql.conf
            name: postgres-1-config
          name: postgres-1-config
  volumeClaimTemplates:
    - metadata:
        name: postgres-data
        labels:
          io.kompose.service: postgres
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 10Gi
