apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres-replica
spec:
  replicas: 2
  serviceName: postgres
  selector:
    matchLabels:
      io.kompose.service: postgres
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (HEAD)
      labels:
        io.kompose.service: postgres
    spec:
      initContainers:
        - name: init
          image: postgres:16.3
          command: ["bash", "-c"]
          args:
            - |
              PGPASSWORD=replication pg_basebackup -h postgres.default.svc.cluster.local -p 5432 -U replicationuser -D /data/pgdata -Fp -Xs -R
          securityContext:
            runAsUser: 0
            runAsGroup: 0
          volumeMounts:
            - mountPath: /data
              name: postgres-data
              readOnly: false
      containers:
        - args:
            - -c
            - config_file=/config/postgresql.conf
          env:
            - name: PGDATA
              value: /data
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: database
                  key: database-name
            - name: POSTGRES_USERNAME
              valueFrom:
                secretKeyRef:
                  name: database
                  key: database-username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: database
                  key: database-password
          image: postgres:16.3
          name: postgres-replica
          ports:
            - containerPort: 5432
              protocol: TCP
          volumeMounts:
            - mountPath: /data
              name: postgres-data
              subPath: pgdata
              readOnly: false
            - mountPath: /config
              name: postgres-2-config
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: io.kompose.service
                    operator: In
                    values:
                      - postgres
                      - products
              topologyKey: "kubernetes.io/hostname"
      restartPolicy: Always
      volumes:
        - configMap:
            name: postgres-2-config
          name: postgres-2-config
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-pvc
